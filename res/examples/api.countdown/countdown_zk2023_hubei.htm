<!DOCTYPE html>
<!-- 
	Editor: kdXiaoyi
	Change From: https://github.com/kdXiaoyi/kdxiaoyi.github.io/blob/main/api/third-party/countdown.htm
	-------
	这是一个分支版本，专门用于计时到2023年6月20日。
	是的没错，（湖北省）2023年中考倒计时
	当然它也可以加参数自用，但是不推荐
 -->
<html lang="zh-cn">
	<head>
		<meta charset="UTF-8">
		<title>Countdown - kdXiaoyi</title>
		<link rel="icon" href="https://kdxiaoyi.github.io/favicon.ico"></link>
	</head>
	<body>
        <p id="Timeleft">请稍后……</p><p id="saying"></p>
	</body>
	<script type="text/javascript">
		var SayingList = [
			"其实这句话永远都不会出现，是不是很神奇呢？","愿你：春风不度马蹄疾，一日看尽长安花。","updata_from_web",
			"明日复明日，明日何其多","明年此日青云去，却笑人间举子忙。","为君一击，鹏抟九天。"
		]
		function RefreshSaying(){
			console.log('Refresh Saying');
			var theSaying=SayingList[getIntegerRandom(1,SayingList.length)-1];
			if (theSaying==SayingList[0]) {/*防打脸*/var theSaying=SayingList[1];};
			if (theSaying==SayingList[2]) {var theSaying=SayingList[1];};
			document.getElementById('saying').innerHTML = theSaying;
			return;
		};
		function getIntegerRandom(min,max) {// Math.round(Math.random()*(n-m)+m) 返回m<=x<=n的random整数值
            return Math.round(Math.random()*(max-min)+min);}
        function getQueryString(name) {let reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)", "i");let r = window.location.search.substr(1).match(reg);if (r != null) {return unescape(r[2]);};return null;}
		function RefreshCountdown(EndY,EndM,EndD){
			//当前时间
			let now = Date.now();
				//结束时间
				end = new Date(EndY,EndM-1,EndD);
				ends = end.getTime();
			let ss = ends - now;
			let s = Math.floor(ss/1000);
			//相差天数
			let day= Math.floor(s / 60 / 60 / 24);
			//相差小时数
			let hours = Math.floor(s / 60 / 60 % 24);
			//相差分钟数
			let min = Math.floor(s / 60 % 60 );
			//相差秒数
			let sec = Math.floor(s % 60 );
			if (HideMode==1) {
				if (ZK_mode==1) {document.getElementById('Timeleft').innerHTML = day+"天"+hours+"小时"+min+"分"+sec+"秒";} else {document.getElementById('Timeleft').innerHTML = day+"天"+hours+"小时"+min+"分"+sec+"秒";};
			} else {
				if (ZK_mode==1) {document.getElementById('Timeleft').innerHTML = "距离2023年中考还有： "+day+"天 "+hours+"小时 "+min+"分 "+sec+"秒 了";} else {document.getElementById('Timeleft').innerHTML = "距离"+y+"年"+m+"月"+d+"天"+"还有： "+day+"天 "+hours+"小时 "+min+"分 "+sec+"秒 了";};
			};}
		function RefreshCountup(StartY,StartM,StartD){
			//当前时间
			let now = Date.now();
				//结束时间
				end = new Date(StartY,StartM-1,StartD);
				ends = end.getTime();
			let ss = ends - now;
			let s = Math.floor(ss/1000);
			//相差天数
			let day= -1*Math.floor(s / 60 / 60 / 24);
			//相差小时数
			let hours = -1*Math.floor(s / 60 / 60 % 24);
			//相差分钟数
			let min = -1*Math.floor(s / 60 % 60 );
			//相差秒数
			let sec = -1*Math.floor(s % 60 );
			if (HideMode==1) {
				if (ZK_mode==1) {document.getElementById('Timeleft').innerHTML = day+"天"+hours+"小时"+min+"分"+sec+"秒";} else {document.getElementById('Timeleft').innerHTML = day+"天"+hours+"小时"+min+"分"+sec+"秒";};
			} else {
				if (ZK_mode==1) {document.getElementById('Timeleft').innerHTML = "距离"+y+"年"+m+"月"+d+"日"+"已经： "+day+"天 "+hours+"小时 "+min+"分 "+sec+"秒 了";} else {document.getElementById('Timeleft').innerHTML = "距离"+y+"年"+m+"月"+d+"天"+"还有： "+day+"天 "+hours+"小时 "+min+"分 "+sec+"秒 了";};
			};
		};
		//初始化参数
        var y=getQueryString('y');var m=getQueryString('m');var d=getQueryString('d');var HideMode=getQueryString('hide')
		var dataInvalid=0 //声明变量，防止部分浏览器报错
		if (Math.floor(y) != y) {var y=2023;console.log('The value of [y] is invaid.');var ZK_mode=1;var loopTime=0;};
		if (Math.floor(m) != m) {var m=6;console.log('The value of [m] is invaid.');var ZK_mode=1;var loopTime=0;};
		if (Math.floor(d) != d) {var d=20;console.log('The value of [d] is invaid.');var ZK_mode=1;var loopTime=0;};
        if (dataInvalid==1) {
			console.log('Data invalid');//数据不为整数
			document.getElementById('Timeleft').innerHTML = "无效参数 <a href=\"https://github.com/kdXiaoyi/kdxiaoyi.github.io/blob/main/api/_help.md#apicountdowninvaid\">API/countdown:invaid</a><br>"+y+"/"+m+"/"+d;
		} else {
			var ShouldAddTime=0//数据为整数后，声明变量
			//判断应采用正计时还是倒计时   ShouldAddTime=1为正计时
			let s1 = Math.floor((new Date(y,m-1,d).getTime() - Date.now())/1000);
			if (Math.floor(s1 / 60 / 60 / 24) < 0) {var ShouldAddTime=1;};
			if (Math.floor(s1 / 60 / 60 % 24) < 0) {var ShouldAddTime=1;};
			if (Math.floor(s1 / 60 % 60 ) < 0) {var ShouldAddTime=1;};
			if (Math.floor(s1 % 60 ) < 0) {var ShouldAddTime=1;};
			if (ShouldAddTime==1) {
				console.log('Enable positive timing mode.');
				var intervalID = setInterval(() => {RefreshCountup(y,m,d)}, 1000);
			} else {
				var intervalID = setInterval(() => {RefreshCountdown(y,m,d)}, 1000);
			};
		};
		if (ZK_mode==1) {
			var Saying_refresh_time=getQueryString('saying_time');
			if (Math.floor(Saying_refresh_time) != Saying_refresh_time) {var Saying_refresh_time=20000};
			var intervalID = setInterval(() => {RefreshSaying()}, Saying_refresh_time);
			RefreshSaying();
		};
	</script>
	<style type="text/css">
		p{text-align: center;float:center;margin-right: 10px;}
        input{border: 0;}
	</style>
</html>